{"version":3,"file":"static/js/423.926458a1.chunk.js","mappings":"uIACA,MAAwB,qBAAxB,EAAqD,qBAArD,EAAkF,qB,SCoBlF,EAnBc,SAAC,GAAsD,IAApDA,EAAmD,EAAnDA,GAAGC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnD,OACE,iBAAKC,UAAWC,EAAhB,WACE,kBAAOD,UAAWC,EAAWC,QAASJ,EAAtC,SACGH,KAEH,kBACED,GAAIA,EACJM,UAAWC,EACXE,KAAK,OACLL,KAAMA,EACND,YAAaA,EACbD,MAAOA,EACPG,SAAUA,MAIjB,C,kFClBD,EAAuB,6BAAvB,EAAkE,oC,SCiFlE,EA/EuB,SAAC,GAQjB,IAPLA,EAOI,EAPJA,SACAK,EAMI,EANJA,OACAC,EAKI,EALJA,cACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,QACAC,EACI,EADJA,QAEA,OACE,2BACE,eAAIT,UAAWC,EAAf,UACE,SAACS,EAAA,EAAD,CACEhB,GAAG,SACHI,KAAK,SACLF,MAAOQ,EACPP,YAAY,aACZF,MAAM,0BACNI,SAAUA,OAGd,eAAIC,UAAWC,EAAf,UACE,SAACS,EAAA,EAAD,CACEhB,GAAG,gBACHI,KAAK,gBACLF,MAAOS,EACPR,YAAY,aACZF,MAAM,6BACNI,SAAUA,OAGd,eAAIC,UAAWC,EAAf,UACE,SAACS,EAAA,EAAD,CACEhB,GAAG,UACHI,KAAK,UACLF,MAAOU,EACPT,YAAY,aACZF,MAAM,cACNI,SAAUA,OAGd,eAAIC,UAAWC,EAAf,UACE,SAACS,EAAA,EAAD,CACEhB,GAAG,OACHI,KAAK,OACLF,MAAOW,EACPV,YAAY,aACZF,MAAM,gDACNI,SAAUA,OAGd,eAAIC,UAAWC,EAAf,UACE,SAACS,EAAA,EAAD,CACEhB,GAAG,UACHI,KAAK,UACLF,MAAOY,EACPX,YAAY,aACZF,MAAM,0DACNI,SAAUA,OAGd,gBAAIC,UAAWC,EAAf,WACE,SAACS,EAAA,EAAD,CACEhB,GAAG,UACHI,KAAK,UACLF,MAAOa,EACPZ,YAAY,aACZF,MAAM,qBACNI,SAAUA,KAEZ,cAAGC,UAAWC,EAAd,8JAQP,E,oBC7EKU,EAAaC,EAAAA,GACT,yBACPC,SAAS,yBACTC,SAAS,kCACTC,QAAQ,0BAELC,EAAgB,CACpBZ,OAAQ,GACRC,cAAe,GACfC,QAAS,GACTC,KAAM,GACNC,QAAS,GACTC,QAAS,IAyCX,EAtCoB,WAClB,IAAMQ,GAASC,EAAAA,EAAAA,IAAU,CACvBF,cAAAA,EACAG,iBAAkBP,EAAAA,GAAW,CAC3BR,OAAQO,EACRN,cAAeM,EACfL,QAASK,EACTJ,KAAMI,EACNH,QAASG,EACTF,QAASE,IAGXS,SAAU,SAAAC,GACRC,MAAMC,KAAKC,UAAUH,EAAQ,KAAM,IAEnCJ,EAAOD,cAAgBA,CACxB,IAGH,OADAS,QAAQC,IAAIT,EAAOU,OAAOvB,SAExB,kBAAMgB,SAAUH,EAAOW,aAAvB,WACE,mBAAQzB,KAAK,SAAb,uBACA,SAAC,EAAD,CACEJ,SAAUkB,EAAOY,aACjBzB,OAAQa,EAAOI,OAAOjB,OACtBC,cAAeY,EAAOI,OAAOhB,cAC7BC,QAASW,EAAOI,OAAOf,QACvBC,KAAMU,EAAOI,OAAOd,KACpBC,QAASS,EAAOI,OAAOb,QACvBC,QAASQ,EAAOI,OAAOZ,UAExBQ,EAAOa,YAAc,GAAKb,EAAOU,OAAOvB,SACvC,cAAG2B,MAAO,CAAEC,MAAO,SAAnB,SAA+Bf,EAAOU,OAAOvB,WAIpD,C","sources":["webpack://project/./src/components/Input/Input.module.css?1f33","components/Input/Input.jsx","webpack://project/./src/components/PlanInputsList/PlanInputsList.module.css?8919","components/PlanInputsList/PlanInputsList.jsx","pages/OwnPlanPage/OwnPlanPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Input_input__E5rzA\",\"label\":\"Input_label__NXpCD\",\"wrapp\":\"Input_wrapp__QQtr7\"};","import css from './Input.module.css';\n\nconst Input = ({ id,label, value, placeholder, name, onChange }) => {\n  return (\n    <div className={css.wrapp}>\n      <label className={css.label} htmlFor={name}>\n        {label}\n      </label>\n      <input\n        id={id}\n        className={css.input}\n        type=\"text\"\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"PlanInputsList_item__D+9rY\",\"description\":\"PlanInputsList_description__e2bnq\"};","import Input from 'components/Input/Input';\nimport css from './PlanInputsList.module.css';\n\nconst PlanInputsList = ({\n  onChange,\n  salary,\n  passiveIncome,\n  savings,\n  cost,\n  footage,\n  procent,\n}) => {\n  return (\n    <ul>\n      <li className={css.item}>\n        <Input\n          id=\"salary\"\n          name=\"salary\"\n          value={salary}\n          placeholder=\"Enter text\"\n          label=\"1. RFP of both spouses,\"\n          onChange={onChange}\n        />\n      </li>\n      <li className={css.item}>\n        <Input\n          id=\"passiveIncome\"\n          name=\"passiveIncome\"\n          value={passiveIncome}\n          placeholder=\"Enter text\"\n          label=\"2. Passive income, months,\"\n          onChange={onChange}\n        />\n      </li>\n      <li className={css.item}>\n        <Input\n          id=\"savings\"\n          name=\"savings\"\n          value={savings}\n          placeholder=\"Enter text\"\n          label=\"3. Savings,\"\n          onChange={onChange}\n        />\n      </li>\n      <li className={css.item}>\n        <Input\n          id=\"cost\"\n          name=\"cost\"\n          value={cost}\n          placeholder=\"Enter text\"\n          label=\"4. Specify the cost of your future apartment,\"\n          onChange={onChange}\n        />\n      </li>\n      <li className={css.item}>\n        <Input\n          id=\"footage\"\n          name=\"footage\"\n          value={footage}\n          placeholder=\"Enter text\"\n          label=\"5. Specify the number of sq.m. of your future apartment\"\n          onChange={onChange}\n        />\n      </li>\n      <li className={css.item}>\n        <Input\n          id=\"procent\"\n          name=\"procent\"\n          value={procent}\n          placeholder=\"Enter text\"\n          label=\"6. Accumulation, %\"\n          onChange={onChange}\n        />\n        <p className={css.description}>\n          Specify the percentage that you would like to accumulate per month\n          from the total amount of income and you will see when you reach the\n          goal\n        </p>\n      </li>\n    </ul>\n  );\n};\nexport default PlanInputsList;\n","import PlanInputsList from 'components/PlanInputsList/PlanInputsList';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nconst validation = yup\n  .number('It`s must be a number')\n  .required('This line is required')\n  .positive('It`s must be a positive number')\n  .integer('It`s must be a integer');\n\nconst initialValues = {\n  salary: '',\n  passiveIncome: '',\n  savings: '',\n  cost: '',\n  footage: '',\n  procent: '',\n};\n\nconst OwnPlanPage = () => {\n  const formik = useFormik({\n    initialValues,\n    validationSchema: yup.object({\n      salary: validation,\n      passiveIncome: validation,\n      savings: validation,\n      cost: validation,\n      footage: validation,\n      procent: validation,\n    }),\n\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n\n      formik.initialValues = initialValues;\n    },\n  });\n  console.log(formik.errors.salary);\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <button type=\"submit\">Pre Plan</button>\n      <PlanInputsList\n        onChange={formik.handleChange}\n        salary={formik.values.salary}\n        passiveIncome={formik.values.passiveIncome}\n        savings={formik.values.savings}\n        cost={formik.values.cost}\n        footage={formik.values.footage}\n        procent={formik.values.procent}\n      />\n      {formik.submitCount > 0 && formik.errors.salary && (\n        <p style={{ color: 'white' }}>{formik.errors.salary}</p>\n      )}\n    </form>\n  );\n};\n\nexport default OwnPlanPage;\n"],"names":["id","label","value","placeholder","name","onChange","className","css","htmlFor","type","salary","passiveIncome","savings","cost","footage","procent","Input","validation","yup","required","positive","integer","initialValues","formik","useFormik","validationSchema","onSubmit","values","alert","JSON","stringify","console","log","errors","handleSubmit","handleChange","submitCount","style","color"],"sourceRoot":""}