{"version":3,"file":"static/js/511.313d86f1.chunk.js","mappings":"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","sources":["webpack://project/./src/components/BasicInput/BasicInput.module.scss?a0ef","components/BasicInput/BasicInput.jsx","webpack://project/./src/components/ModalAddBalance/ModalAddBalance.module.scss?6dbb","components/ModalAddBalance/ModalAddBalance.jsx","webpack://project/./src/components/LabledInput/LabledInput.module.scss?5340","components/LabledInput/LabledInput.jsx","webpack://project/./src/components/ResultForm/ResultForm.module.scss?b712","components/ResultForm/ResultForm.jsx","redux/PersonalPlan/personalPlanSelectors.js","webpack://project/./src/pages/OwnPlanPage/OwnPlanPage.module.scss?aef0","pages/OwnPlanPage/OwnPlanPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input\":\"BasicInput_input__FjvHv\"};","import clsx from 'clsx';\nimport s from './BasicInput.module.scss';\n\nexport const BasicInput = ({ name, className,placeholder, ...props }) => {\n  return (\n    <input\n      id={name}\n      placeholder={placeholder}\n      className={clsx(className, s.input)}\n      type=\"text\"\n      name={name}\n      {...props}\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btnBox\":\"ModalAddBalance_btnBox__1pmKy\"};","import { BasicInput } from 'components/BasicInput/BasicInput';\nimport { Button } from 'components/Button/Button';\nimport Modal from 'components/Modal/Modal';\nimport s from './ModalAddBalance.module.scss';\nimport { useDispatch } from 'react-redux';\nimport { getBalanceUser } from 'redux/Auth/authOperations';\n\nexport const ModalAddBalance = ({ show, onClose }) => {\n  const dispatch = useDispatch();\n  const addBalance = value => {\n    // console.log('add balance: ', value);\n    dispatch(getBalanceUser(Number(value)));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const input = form.elements.input.value;\n    form.reset();\n    // console.log('input:', input);\n    addBalance(input);\n    onClose();\n  };\n\n  return (\n    <Modal show={show} showCloseBtn={true} onClose={onClose}>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <BasicInput name=\"input\" placeholder=\"Enter balance\" />\n        <div className={s.btnBox}>\n          <Button variant=\"primary\" type=\"submit\">\n            Add\n          </Button>\n          <Button variant=\"secondary\" onClick={onClose}>\n            Cancel\n          </Button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"LabledInput_label__F0cz6\",\"input\":\"LabledInput_input__emeD0\",\"wrapper\":\"LabledInput_wrapper__Rjf3H\"};","import clsx from 'clsx';\nimport { BasicInput } from '../BasicInput/BasicInput';\nimport s from './LabledInput.module.scss';\n\nexport const LabledInput = ({ label, value, className, inputClassName,  placeholder  }) => {\n  return (\n    <div className={clsx(className, s.wrapper)}>\n      <p className={s.label}>{label}</p>\n      <BasicInput\n         placeholder={placeholder}\n        value={value}\n        readOnly={true}\n        className={clsx(inputClassName, s.input)}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ResultForm_wrapper__GVqQC\",\"innerWrapper\":\"ResultForm_innerWrapper__X719Z\",\"btnWrapper\":\"ResultForm_btnWrapper__yKx9u\",\"title\":\"ResultForm_title__-zEMh\",\"input\":\"ResultForm_input__4mXu1\",\"firstInput\":\"ResultForm_firstInput__P9nkK\",\"secondInput\":\"ResultForm_secondInput__JhjkP\",\"submitButton\":\"ResultForm_submitButton__sA3PT\"};","import { Button } from 'components/Button/Button';\nimport { LabledInput } from 'components/LabledInput/LabledInput';\nimport s from './ResultForm.module.scss';\nimport { ModalAddBalance } from 'components/ModalAddBalance/ModalAddBalance';\nimport { usePopup } from 'hooks/usePopup';\n\nconst ResultForm = ({ title, year, month, onClick }) => {\n  const { show, showPopup, closePopup } = usePopup();\n  return (\n    <div className={s.wrapper}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      <div className={s.innerWrapper}>\n        <LabledInput\n          label=\"Number of years\"\n          placeholder=\"0 year\"\n          value={year}\n          className={s.firstInput}\n          inputClassName={s.input}\n        />\n        <LabledInput\n          label=\"Number of months\"\n          value={month}\n          placeholder=\"0 month\"\n          className={s.secondInput}\n          inputClassName={s.input}\n        />\n        <div className={s.btnWrapper}>\n          <Button\n            onClick={onClick}\n            variant=\"neutral\"\n            type=\"submit\"\n            className={s.submitButton}\n          >\n            Fits\n          </Button>\n          <Button variant=\"link\" onClick={showPopup}>\n            Add Balance\n          </Button>\n        </div>\n      </div>\n      <ModalAddBalance show={show} onClose={closePopup} />\n    </div>\n  );\n};\n\nexport default ResultForm;\n","export const selectYear = state => state.plan.year;\nexport const selectMonth = state => state.plan.month;\nexport const selectPersonalPlan = state => state.plan;\n// export const selectId = state => Boolean(state.plan._id);","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"OwnPlanPage_wrapper__1xr2H\",\"list\":\"OwnPlanPage_list__eYpjq\",\"item\":\"OwnPlanPage_item__24AYq\",\"form\":\"OwnPlanPage_form__X2cKQ\",\"description\":\"OwnPlanPage_description__9xhcw\",\"prevPlanButton\":\"OwnPlanPage_prevPlanButton__DB73J\"};","import { Button } from 'components/Button/Button';\nimport Input from 'components/Input/Input';\nimport ResultForm from 'components/ResultForm/ResultForm';\nimport {\n  selectYear,\n  selectMonth,\n  selectPersonalPlan,\n} from 'redux/PersonalPlan/personalPlanSelectors';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  postPersonalPlanPre,\n  postPersonalPlan,\n  getPersonalPlan,\n  putPersonalPlan,\n} from 'redux/PersonalPlan/personalPlanOperationg';\nimport style from './OwnPlanPage.module.scss';\nimport { useEffect } from 'react';\n\nimport { persistor } from 'redux/store';\n\nconst validation = yup\n  .number('It`s must be a number')\n  .required('This line is required')\n  .positive('It`s must be a positive number')\n  .integer('It`s must be a integer');\n\nconst initialValues = {\n  salary: '',\n  passiveIncome: '',\n  savings: '',\n  cost: '',\n  footage: '',\n  procent: '',\n  month: '',\n  year: '',\n};\n\nconst OwnPlanPage = () => {\n  const dispatch = useDispatch();\n\n  const id = persistor.getState()\n  console.log(id);\n\n  const plan = useSelector(selectPersonalPlan);\n  const year = useSelector(selectYear);\n  const month = useSelector(selectMonth);\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema: yup.object({\n      salary: validation,\n      passiveIncome: validation,\n      savings: validation,\n      cost: validation,\n      footage: validation,\n      procent: validation,\n    }),\n\n    onSubmit: values => {\n      const { salary, passiveIncome, savings, cost, footage, procent } = values;\n      if (plan._id) return;\n      dispatch(\n        postPersonalPlanPre({\n          salary: Number(salary),\n          passiveIncome: Number(passiveIncome),\n          savings: Number(savings),\n          cost: Number(cost),\n          footage: Number(footage),\n          procent: Number(procent),\n        })\n      );\n    },\n  });\n\n  useEffect(() => {\n    formik.setValues(plan);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [plan]);\n\n  const handleClick = () => {\n    if (!plan._id) {\n      const { salary, passiveIncome, savings, cost, footage, procent } = plan;\n      dispatch(\n        postPersonalPlan({\n          salary,\n          passiveIncome,\n          savings,\n          cost,\n          footage,\n          procent,\n        })\n      );\n      return;\n    } else {\n      const { salary, passiveIncome, savings, cost, footage, procent } =\n        formik.values;\n      dispatch(\n        putPersonalPlan({\n          salary,\n          passiveIncome,\n          savings,\n          cost,\n          footage,\n          procent,\n        })\n      );\n    }\n  };\n\n  useEffect(() => {\n    dispatch(getPersonalPlan());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      <div className={style.wrapper}>\n        <form className={style.form} onSubmit={formik.handleSubmit}>\n          <ul className={style.list}>\n            <li className={style.item}>\n              <Input\n                id=\"salary\"\n                name=\"salary\"\n                value={formik.values.salary}\n                placeholder=\"Enter text\"\n                label=\"1. RFP of both spouses, &#8372;\"\n                onChange={formik.handleChange}\n              />\n              {formik.submitCount > 0 && formik.errors.salary && (\n                <p style={{ color: 'white' }}>{formik.errors.salary}</p>\n              )}\n            </li>\n            <li className={style.item}>\n              <Input\n                id=\"passiveIncome\"\n                name=\"passiveIncome\"\n                value={formik.values.passiveIncome}\n                placeholder=\"Enter text\"\n                label=\"2. Passive income, months, &#8372;\"\n                onChange={formik.handleChange}\n              />\n              {formik.submitCount > 0 && formik.errors.passiveIncome && (\n                <p style={{ color: 'white' }}>{formik.errors.passiveIncome}</p>\n              )}\n            </li>\n            <li className={style.item}>\n              <Input\n                id=\"savings\"\n                name=\"savings\"\n                value={formik.values.savings}\n                placeholder=\"Enter text\"\n                label=\"3. Savings, &#8372;\"\n                onChange={formik.handleChange}\n              />\n              {formik.submitCount > 0 && formik.errors.savings && (\n                <p style={{ color: 'white' }}>{formik.errors.savings}</p>\n              )}\n            </li>\n            <li className={style.item}>\n              <Input\n                id=\"cost\"\n                name=\"cost\"\n                value={formik.values.cost}\n                placeholder=\"Enter text\"\n                label=\"4. Specify the cost of your future apartment, &#8372;\"\n                onChange={formik.handleChange}\n              />\n              {formik.submitCount > 0 && formik.errors.cost && (\n                <p style={{ color: 'white' }}>{formik.errors.cost}</p>\n              )}\n            </li>\n            <li className={style.item}>\n              <Input\n                id=\"footage\"\n                name=\"footage\"\n                value={formik.values.footage}\n                placeholder=\"Enter text\"\n                label=\"5. Specify the number of sq.m. of your future apartment\"\n                onChange={formik.handleChange}\n              />\n              {formik.submitCount > 0 && formik.errors.footage && (\n                <p style={{ color: 'white' }}>{formik.errors.footage}</p>\n              )}\n            </li>\n            <li className={style.item}>\n              <Input\n                id=\"procent\"\n                name=\"procent\"\n                value={formik.values.procent}\n                placeholder=\"Enter text\"\n                label=\"6. Accumulation, %\"\n                onChange={formik.handleChange}\n              />\n              {formik.submitCount > 0 && formik.errors.procent && (\n                <p style={{ color: 'white' }}>{formik.errors.procent}</p>\n              )}\n              <p className={style.description}>\n                Specify the percentage that you would like to accumulate per\n                month from the total amount of income and you will see when you\n                reach the goal\n              </p>\n            </li>\n          </ul>\n          <Button type=\"submit\" className={style.prevPlanButton}>\n            Pre Plan\n          </Button>\n          <ResultForm\n            title=\"You will have an apartment in:\"\n            year={year}\n            month={month}\n            onClick={handleClick}\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default OwnPlanPage;\n"],"names":["BasicInput","name","className","placeholder","props","id","clsx","s","type","ModalAddBalance","show","onClose","dispatch","useDispatch","Modal","showCloseBtn","action","onSubmit","e","preventDefault","value","form","currentTarget","input","elements","reset","getBalanceUser","Number","Button","variant","onClick","LabledInput","label","inputClassName","readOnly","title","year","month","usePopup","showPopup","closePopup","selectYear","state","plan","selectMonth","selectPersonalPlan","validation","yup","required","positive","integer","initialValues","salary","passiveIncome","savings","cost","footage","procent","persistor","console","log","useSelector","formik","useFormik","validationSchema","values","_id","postPersonalPlanPre","useEffect","setValues","getPersonalPlan","style","handleSubmit","Input","onChange","handleChange","submitCount","errors","color","putPersonalPlan","postPersonalPlan"],"sourceRoot":""}