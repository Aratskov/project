{"version":3,"file":"static/js/511.73c9fb6e.chunk.js","mappings":"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","sources":["webpack://project/./src/components/BasicInput/BasicInput.module.scss?a0ef","components/BasicInput/BasicInput.jsx","webpack://project/./src/components/Input/Input.module.scss?f352","components/Input/Input.jsx","webpack://project/./src/components/Modal/Modal.module.scss?b72d","components/Modal/Modal.jsx","webpack://project/./src/components/ModalAddBalance/ModalAddBalance.module.scss?6dbb","components/ModalAddBalance/ModalAddBalance.jsx","hooks/usePopup.js","webpack://project/./src/components/LabledInput/LabledInput.module.scss?5340","components/LabledInput/LabledInput.jsx","webpack://project/./src/components/ResultForm/ResultForm.module.scss?b712","components/ResultForm/ResultForm.jsx","redux/PersonalPlan/personalPlanSelectors.js","webpack://project/./src/pages/OwnPlanPage/OwnPlanPage.module.scss?aef0","pages/OwnPlanPage/OwnPlanPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input\":\"BasicInput_input__FjvHv\"};","import clsx from 'clsx';\nimport s from './BasicInput.module.scss';\n\nexport const BasicInput = ({ name, className,placeholder, ...props }) => {\n  return (\n    <input\n      id={name}\n      placeholder={placeholder}\n      className={clsx(className, s.input)}\n      type=\"text\"\n      name={name}\n      {...props}\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Input_input__k5Ctk\",\"label\":\"Input_label__U9NhE\",\"wrapp\":\"Input_wrapp__X27Sy\"};","import style from './Input.module.scss';\n\nconst Input = ({\n  id,\n  label,\n  value,\n  placeholder,\n  name,\n  onChange,\n  classNameWrapp = `${style.wrapp}`,\n  classNameInput = `${style.input}`,\n  classNameLabel = `${style.label}`,\n}) => {\n  return (\n    <div className={classNameWrapp}>\n      <input\n        id={id}\n        className={classNameInput}\n        type=\"text\"\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      <label className={classNameLabel} htmlFor={name}>\n        {label}\n      </label>\n    </div>\n  );\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__sVPQZ\",\"popup\":\"Modal_popup__KSYCg\",\"btnClose\":\"Modal_btnClose__zv2rY\",\"iconClose\":\"Modal_iconClose__u8oJf\"};","import PropTypes from 'prop-types';\nimport s from './Modal.module.scss';\nimport { useEffect } from 'react';\nimport clsx from 'clsx';\nimport icons from '../../assets/icons/sprite.svg';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({\n  show,\n  showCloseBtn = true,\n  onClose,\n  className,\n  children,\n}) {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  return createPortal(\n    show && (\n      <div className={s.backdrop} onClick={onClose}>\n        <div\n          onClick={e => {\n            e.stopPropagation();\n          }}\n        >\n          <div className={clsx(className, s.popup)}>\n            {showCloseBtn && (\n              <button className={s.btnClose} onClick={onClose}>\n                <svg className={s.iconClose}>\n                  <use href={`${icons}#icon-close`}></use>\n                </svg>\n              </button>\n            )}\n            {children}\n          </div>\n        </div>\n      </div>\n    ),\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  show: PropTypes.bool,\n  showCloseBtn: PropTypes.bool,\n  onClose: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btnBox\":\"ModalAddBalance_btnBox__1pmKy\"};","import { BasicInput } from 'components/BasicInput/BasicInput';\nimport { Button } from 'components/Button/Button';\nimport Modal from 'components/Modal/Modal';\nimport s from './ModalAddBalance.module.scss';\nimport { useDispatch } from 'react-redux';\nimport { getBalanceUser } from 'redux/Auth/authOperations';\n\nexport const ModalAddBalance = ({ show, onClose }) => {\n  const dispatch = useDispatch();\n  const addBalance = value => {\n    // console.log('add balance: ', value);\n    dispatch(getBalanceUser(Number(value)));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const input = form.elements.input.value;\n    form.reset();\n    // console.log('input:', input);\n    addBalance(input);\n    onClose();\n  };\n\n  return (\n    <Modal show={show} showCloseBtn={true} onClose={onClose}>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <BasicInput name=\"input\" placeholder=\"Enter balance\" />\n        <div className={s.btnBox}>\n          <Button variant=\"primary\" type=\"submit\">\n            Add\n          </Button>\n          <Button variant=\"secondary\" onClick={onClose}>\n            Cancel\n          </Button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n","import { useState } from 'react';\n\nexport const usePopup = () => {\n  const [show, setShow] = useState(false);\n  const showPopup = () => {\n    setShow(true);\n  };\n  const closePopup = () => {\n    setShow(false);\n  };\n\n  return { show, showPopup, closePopup };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"LabledInput_label__F0cz6\",\"input\":\"LabledInput_input__emeD0\",\"wrapper\":\"LabledInput_wrapper__Rjf3H\"};","import clsx from 'clsx';\nimport { BasicInput } from '../BasicInput/BasicInput';\nimport s from './LabledInput.module.scss';\n\nexport const LabledInput = ({ label, value, className, inputClassName,  placeholder  }) => {\n  return (\n    <div className={clsx(className, s.wrapper)}>\n      <p className={s.label}>{label}</p>\n      <BasicInput\n         placeholder={placeholder}\n        value={value}\n        readOnly={true}\n        className={clsx(inputClassName, s.input)}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ResultForm_wrapper__GVqQC\",\"innerWrapper\":\"ResultForm_innerWrapper__X719Z\",\"btnWrapper\":\"ResultForm_btnWrapper__yKx9u\",\"title\":\"ResultForm_title__-zEMh\",\"input\":\"ResultForm_input__4mXu1\",\"firstInput\":\"ResultForm_firstInput__P9nkK\",\"secondInput\":\"ResultForm_secondInput__JhjkP\",\"submitButton\":\"ResultForm_submitButton__sA3PT\"};","import { Button } from 'components/Button/Button';\nimport { LabledInput } from 'components/LabledInput/LabledInput';\nimport s from './ResultForm.module.scss';\nimport { ModalAddBalance } from 'components/ModalAddBalance/ModalAddBalance';\nimport { usePopup } from 'hooks/usePopup';\n\nconst ResultForm = ({ title, year, month, onClick }) => {\n  const { show, showPopup, closePopup } = usePopup();\n  return (\n    <div className={s.wrapper}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      <div className={s.innerWrapper}>\n        <LabledInput\n          label=\"Number of years\"\n          placeholder=\"0 year\"\n          value={year}\n          className={s.firstInput}\n          inputClassName={s.input}\n        />\n        <LabledInput\n          label=\"Number of months\"\n          value={month}\n          placeholder=\"0 month\"\n          className={s.secondInput}\n          inputClassName={s.input}\n        />\n        <div className={s.btnWrapper}>\n          <Button\n            onClick={onClick}\n            variant=\"neutral\"\n            type=\"submit\"\n            className={s.submitButton}\n          >\n            Fits\n          </Button>\n          <Button variant=\"link\" onClick={showPopup}>\n            Add Balance\n          </Button>\n        </div>\n      </div>\n      <ModalAddBalance show={show} onClose={closePopup} />\n    </div>\n  );\n};\n\nexport default ResultForm;\n","export const selectYear = state => state.plan.year;\nexport const selectMonth = state => state.plan.month;\nexport const selectPersonalPlan = state => state.plan;\n// export const selectId = state => Boolean(state.plan._id);","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"OwnPlanPage_wrapper__1xr2H\",\"list\":\"OwnPlanPage_list__eYpjq\",\"item\":\"OwnPlanPage_item__24AYq\",\"form\":\"OwnPlanPage_form__X2cKQ\",\"description\":\"OwnPlanPage_description__9xhcw\",\"prevPlanButton\":\"OwnPlanPage_prevPlanButton__DB73J\"};","import { Button } from 'components/Button/Button';\nimport Input from 'components/Input/Input';\nimport ResultForm from 'components/ResultForm/ResultForm';\nimport {\n  selectYear,\n  selectMonth,\n  selectPersonalPlan,\n} from 'redux/PersonalPlan/personalPlanSelectors';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  postPersonalPlanPre,\n  postPersonalPlan,\n  getPersonalPlan,\n  putPersonalPlan,\n} from 'redux/PersonalPlan/personalPlanOperationg';\nimport style from './OwnPlanPage.module.scss';\nimport { useEffect } from 'react';\n\nimport { persistor } from 'redux/store';\n\nconst validation = yup\n  .number('It`s must be a number')\n  .required('This line is required')\n  .positive('It`s must be a positive number')\n  .integer('It`s must be a integer');\n\nconst initialValues = {\n  salary: '',\n  passiveIncome: '',\n  savings: '',\n  cost: '',\n  footage: '',\n  procent: '',\n  month: '',\n  year: '',\n};\n\nconst OwnPlanPage = () => {\n  const dispatch = useDispatch();\n\n  const id = persistor.getState()\n  console.log(id);\n\n  const plan = useSelector(selectPersonalPlan);\n  const year = useSelector(selectYear);\n  const month = useSelector(selectMonth);\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema: yup.object({\n      salary: validation,\n      passiveIncome: validation,\n      savings: validation,\n      cost: validation,\n      footage: validation,\n      procent: validation,\n    }),\n\n    onSubmit: values => {\n      const { salary, passiveIncome, savings, cost, footage, procent } = values;\n      if (plan._id) return;\n      dispatch(\n        postPersonalPlanPre({\n          salary: Number(salary),\n          passiveIncome: Number(passiveIncome),\n          savings: Number(savings),\n          cost: Number(cost),\n          footage: Number(footage),\n          procent: Number(procent),\n        })\n      );\n    },\n  });\n\n  useEffect(() => {\n    formik.setValues(plan);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [plan]);\n\n  const handleClick = () => {\n    if (!plan._id) {\n      const { salary, passiveIncome, savings, cost, footage, procent } = plan;\n      dispatch(\n        postPersonalPlan({\n          salary,\n          passiveIncome,\n          savings,\n          cost,\n          footage,\n          procent,\n        })\n      );\n      return;\n    } else {\n      const { salary, passiveIncome, savings, cost, footage, procent } =\n        formik.values;\n      dispatch(\n        putPersonalPlan({\n          salary,\n          passiveIncome,\n          savings,\n          cost,\n          footage,\n          procent,\n        })\n      );\n    }\n  };\n\n  useEffect(() => {\n    dispatch(getPersonalPlan());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      <div className={style.wrapper}>\n        <form className={style.form} onSubmit={formik.handleSubmit}>\n          <ul className={style.list}>\n            <li className={style.item}>\n              <Input\n                id=\"salary\"\n                name=\"salary\"\n                value={formik.values.salary}\n                placeholder=\"Enter text\"\n                label=\"1. RFP of both spouses, &#8372;\"\n                onChange={formik.handleChange}\n              />\n              {formik.submitCount > 0 && formik.errors.salary && (\n                <p style={{ color: 'white' }}>{formik.errors.salary}</p>\n              )}\n            </li>\n            <li className={style.item}>\n              <Input\n                id=\"passiveIncome\"\n                name=\"passiveIncome\"\n                value={formik.values.passiveIncome}\n                placeholder=\"Enter text\"\n                label=\"2. Passive income, months, &#8372;\"\n                onChange={formik.handleChange}\n              />\n              {formik.submitCount > 0 && formik.errors.passiveIncome && (\n                <p style={{ color: 'white' }}>{formik.errors.passiveIncome}</p>\n              )}\n            </li>\n            <li className={style.item}>\n              <Input\n                id=\"savings\"\n                name=\"savings\"\n                value={formik.values.savings}\n                placeholder=\"Enter text\"\n                label=\"3. Savings, &#8372;\"\n                onChange={formik.handleChange}\n              />\n              {formik.submitCount > 0 && formik.errors.savings && (\n                <p style={{ color: 'white' }}>{formik.errors.savings}</p>\n              )}\n            </li>\n            <li className={style.item}>\n              <Input\n                id=\"cost\"\n                name=\"cost\"\n                value={formik.values.cost}\n                placeholder=\"Enter text\"\n                label=\"4. Specify the cost of your future apartment, &#8372;\"\n                onChange={formik.handleChange}\n              />\n              {formik.submitCount > 0 && formik.errors.cost && (\n                <p style={{ color: 'white' }}>{formik.errors.cost}</p>\n              )}\n            </li>\n            <li className={style.item}>\n              <Input\n                id=\"footage\"\n                name=\"footage\"\n                value={formik.values.footage}\n                placeholder=\"Enter text\"\n                label=\"5. Specify the number of sq.m. of your future apartment\"\n                onChange={formik.handleChange}\n              />\n              {formik.submitCount > 0 && formik.errors.footage && (\n                <p style={{ color: 'white' }}>{formik.errors.footage}</p>\n              )}\n            </li>\n            <li className={style.item}>\n              <Input\n                id=\"procent\"\n                name=\"procent\"\n                value={formik.values.procent}\n                placeholder=\"Enter text\"\n                label=\"6. Accumulation, %\"\n                onChange={formik.handleChange}\n              />\n              {formik.submitCount > 0 && formik.errors.procent && (\n                <p style={{ color: 'white' }}>{formik.errors.procent}</p>\n              )}\n              <p className={style.description}>\n                Specify the percentage that you would like to accumulate per\n                month from the total amount of income and you will see when you\n                reach the goal\n              </p>\n            </li>\n          </ul>\n          <Button type=\"submit\" className={style.prevPlanButton}>\n            Pre Plan\n          </Button>\n          <ResultForm\n            title=\"You will have an apartment in:\"\n            year={year}\n            month={month}\n            onClick={handleClick}\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default OwnPlanPage;\n"],"names":["BasicInput","name","className","placeholder","props","id","clsx","s","type","label","value","onChange","classNameWrapp","style","classNameInput","classNameLabel","htmlFor","modalRoot","document","querySelector","Modal","show","showCloseBtn","onClose","children","useEffect","handleKeyDown","e","key","addEventListener","removeEventListener","createPortal","onClick","stopPropagation","href","icons","ModalAddBalance","dispatch","useDispatch","action","onSubmit","preventDefault","form","currentTarget","input","elements","reset","getBalanceUser","Number","Button","variant","usePopup","useState","setShow","showPopup","closePopup","LabledInput","inputClassName","readOnly","title","year","month","selectYear","state","plan","selectMonth","selectPersonalPlan","validation","yup","required","positive","integer","initialValues","salary","passiveIncome","savings","cost","footage","procent","persistor","console","log","useSelector","formik","useFormik","validationSchema","values","_id","postPersonalPlanPre","setValues","getPersonalPlan","handleSubmit","Input","handleChange","submitCount","errors","color","putPersonalPlan","postPersonalPlan"],"sourceRoot":""}