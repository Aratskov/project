{"version":3,"file":"static/js/612.a335b924.chunk.js","mappings":"yKACA,EAAwB,0B,8CCEXA,EAAa,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,UAAUC,EAA4B,EAA5BA,YAAgBC,GAAY,YACvE,OACE,0BACEC,GAAIJ,EACJE,YAAaA,EACbD,WAAWI,EAAAA,EAAAA,GAAKJ,EAAWK,GAC3BC,KAAK,OACLP,KAAMA,GACFG,GAGT,C,+ECbD,EAAwB,2BAAxB,EAA2D,2BAA3D,EAAgG,6B,SCGnFK,EAAc,SAAC,GAAgE,IAA9DC,EAA6D,EAA7DA,MAAOC,EAAsD,EAAtDA,MAAOT,EAA+C,EAA/CA,UAAWU,EAAoC,EAApCA,eAAiBT,EAAmB,EAAnBA,YACtE,OACE,iBAAKD,WAAWI,EAAAA,EAAAA,GAAKJ,EAAWK,GAAhC,WACE,cAAGL,UAAWK,EAAd,SAAwBG,KACxB,SAACV,EAAA,EAAD,CACGG,YAAaA,EACdQ,MAAOA,EACPE,UAAU,EACVX,WAAWI,EAAAA,EAAAA,GAAKM,EAAgBL,OAIvC,C,sGCfD,EAAuB,kCAAvB,EAAgE,kCAAhE,EAA4G,qC,8BCE/FO,EAA4B,SAAAC,GACvC,IAAMC,EAFwB,SAAAD,GAAK,OAAIA,EAAME,SAASC,QAAnB,CAEhBC,CAAiBJ,GACpC,OAAOC,EAAWI,KAAI,SAAAF,GACpB,IAAMG,GAAgB,kBAAQH,GAAR,IAAkBI,KAAM,KAC9C,OAAQJ,EAASjB,MACf,IAAK,WACHoB,EAAiBC,KAAjB,UAA2BC,EAAAA,EAA3B,cACA,MACF,IAAK,WACHF,EAAiBC,KAAjB,UAA2BC,EAAAA,EAA3B,mBACA,MACF,IAAK,QACHF,EAAiBC,KAAjB,UAA2BC,EAAAA,EAA3B,oBACA,MACF,IAAK,SACHF,EAAiBC,KAAjB,UAA2BC,EAAAA,EAA3B,iBACA,MACF,IAAK,SACHF,EAAiBC,KAAjB,UAA2BC,EAAAA,EAA3B,aACA,MACF,IAAK,YACHF,EAAiBC,KAAjB,UAA2BC,EAAAA,EAA3B,aACA,MACF,IAAK,QACHF,EAAiBC,KAAjB,UAA2BC,EAAAA,EAA3B,eACA,MACF,IAAK,QACHF,EAAiBC,KAAjB,UAA2BC,EAAAA,EAA3B,kBAKJ,OAAOF,CACR,GACF,EACYG,EAAqB,SAAAT,GAAK,OAAIA,EAAME,SAASQ,SAAnB,E,2DCrCvC,EAA0B,gCAA1B,EAAyE,qCAAzE,EAA6H,qCAA7H,EAA+K,mCAA/K,EAAgQ,8BAAhQ,EAA2S,mCAA3S,EAA4V,oCAA5V,EAA+Y,qC,oBCA/Y,EAAyB,+B,mBCMZC,EAAiB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC/BC,GAAWC,EAAAA,EAAAA,MAgBjB,OACE,SAACC,EAAA,EAAD,CAAOJ,KAAMA,EAAMK,cAAc,EAAMJ,QAASA,EAAhD,UACE,kBAAMK,OAAO,GAAGC,SAZC,SAAAC,GACnBA,EAAEC,iBACF,IAPgBzB,EAOV0B,EAAOF,EAAEG,cACTC,EAAQF,EAAKG,SAASD,MAAM5B,MAClC0B,EAAKI,QACLC,QAAQC,IAAI,SAAUJ,GAVN5B,EAWN4B,EAVVV,GAASe,EAAAA,EAAAA,IAAe,CAAEpC,KAAM,SAAUqC,IAAKC,OAAOnC,MACtD+B,QAAQC,IAAI,eAAgBhC,GAU5BiB,GACD,EAIG,WACE,SAAC5B,EAAA,EAAD,CAAYC,KAAK,QAAQE,YAAY,kBACrC,iBAAKD,UAAWK,EAAhB,WACE,SAACwC,EAAA,EAAD,CAAQC,QAAQ,UAAUxC,KAAK,SAA/B,kBAGA,SAACuC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASrB,EAArC,2BAOT,ECMD,EAnCuB,WACrB,OACEsB,EAAAA,EAAAA,IAAY1B,GADN2B,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,WAAYC,EAAhC,EAAgCA,cAAeC,EAA/C,EAA+CA,WAG/C,GAAwCC,EAAAA,EAAAA,KAAhC5B,EAAR,EAAQA,KAAM6B,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,WAEzB,OACE,iBAAKvD,UAAWK,EAAhB,WACE,iBAAKL,UAAWK,EAAhB,WACE,SAACE,EAAA,EAAD,CACEC,MAAM,cACNC,MAAK,UAAK+C,KAAKC,MAAMP,EAAaE,GAA7B,WACLpD,WAAWI,EAAAA,EAAAA,GAAKC,EAAcA,GAC9BK,eAAgBL,KAElB,SAACE,EAAA,EAAD,CACEC,MAAM,gBACNC,MAAK,UAAK+C,KAAKC,MAAMR,EAAaE,GAA7B,WACLnD,WAAWI,EAAAA,EAAAA,GAAKC,EAAeA,GAC/BK,eAAgBL,KAElB,iBAAKL,UAAWK,EAAhB,WACE,SAACwC,EAAA,EAAD,CAAQC,QAAQ,UAAUxC,KAAK,SAASN,UAAWK,EAAnD,oBAGA,SAACwC,EAAA,EAAD,CAAQC,QAAQ,OAAOC,QAASO,EAAhC,+BAKJ,SAAC9B,EAAD,CAAgBC,KAAMA,EAAMC,QAAS6B,MAG1C,E,8BC7BKG,EAASC,EAAAA,KAAaC,MAAM,CAChCC,QAASF,EAAAA,KAENG,IAAI,EAAG,+CACPC,IAAI,IACJC,SAAS,0BACZrB,IAAKgB,EAAAA,KAEFM,SAAS,gCACTD,SAAS,0BACZhD,SAAU2C,EAAAA,OAoGZ,EAjG4B,WAC1B,IAAMhC,GAAWC,EAAAA,EAAAA,MACXd,GAAakC,EAAAA,EAAAA,IAAYpC,GACzBsD,GAAUlB,EAAAA,EAAAA,IAAYmB,EAAAA,IAE5B,GAAgDC,EAAAA,EAAAA,UAAS,CACvDrE,KAAM,QACNsE,MAAO,QACPjD,KAAK,GAAD,OAAKC,EAAAA,EAAL,oBAHN,eAAOiD,EAAP,KAAyBC,EAAzB,KA0BA,OACE,SAAC,KAAD,CACEC,cAvBkB,CACpBX,QAAS,GACTlB,IAAK,GACL3B,SAAU,IAqBRgB,SAlBiB,SAACyC,EAAD,GAA+C,IAApCC,EAAmC,EAAnCA,cAAmC,EAApBC,cAC7CD,GAAc,GACd/C,GACEe,EAAAA,EAAAA,KAAe,kBACV+B,GADS,IAEZzD,SAAUsD,EAAiBvE,KAC3BO,KAAM,aAGX,EAUGsE,iBAAkBlB,EAHpB,UAKE,UAAC,KAAD,CAAM1D,UAAW6E,EAAjB,WACE,iBAAK7E,UAAW6E,EAAhB,WACE,gBAAK7E,UAAW6E,EAAhB,UACE,SAACC,EAAA,EAAD,CACE/E,KAAK,UACLU,MAAOyD,EAAQ,GAAD,OAAKA,EAAL,OAAoB,QAClCjE,YAAY,8BACZO,MAAM,eACNuE,SAAU,kBAAMb,CAAN,OAId,gBAAKlE,UAAW6E,EAAhB,UACE,SAACG,EAAAC,EAAD,CACElF,KAAK,WACLU,MAAO6D,EACPY,QAASpE,EACTN,MAAM,eACNuE,SA5BiB,SAAA/D,GAC3BuD,EAAoBvD,EACrB,OA8BO,iBAAKhB,UAAW6E,EAAhB,WACE,iBAAK7E,UAAWK,EAAAA,EAAAA,MAAhB,WACE,SAAC,KAAD,CACEL,UAAWK,EAAAA,EAAAA,MACXC,KAAK,OACLP,KAAK,UACLE,YAAY,mBAEd,kBAAOkF,QAAQ,UAAUnF,UAAWK,EAAAA,EAAAA,MAApC,iCAKF,SAAC,KAAD,CAAcN,KAAK,gBAGrB,iBAAKC,UAAW6E,EAAhB,WACE,iBAAK7E,UAAWK,EAAAA,EAAAA,MAAhB,WACE,SAAC,KAAD,CACEN,KAAK,MACLC,UAAWK,EAAAA,EAAAA,MACXC,KAAK,OACLL,YAAY,WAEd,kBAAOkF,QAAQ,MAAMnF,UAAWK,EAAAA,EAAAA,MAAhC,qBAKF,SAAC,KAAD,CAAcN,KAAK,eAIvB,SAAC,EAAD,QAIP,EC1HD,EAA0B,8BC+B1B,EAxBqB,WACnB,IAAM4B,GAAWC,EAAAA,EAAAA,MAWjB,OAVAwD,EAAAA,EAAAA,YAAU,WACRzD,GAAS0D,EAAAA,EAAAA,MACV,GAAC,CAAC1D,KAGHyD,EAAAA,EAAAA,YAAU,WACRzD,GAAS2D,EAAAA,EAAAA,OACT9C,QAAQC,IAAI,OACb,GAAE,CAACd,KAKF,gBAAK3B,UAAU,YAAf,UACE,gBAAKA,UAAW6E,EAAhB,UACE,SAAC,EAAD,OAKP,C","sources":["webpack://project/./src/components/BasicInput/BasicInput.module.scss?a0ef","components/BasicInput/BasicInput.jsx","webpack://project/./src/components/LabledInput/LabledInput.module.scss?5340","components/LabledInput/LabledInput.jsx","webpack://project/./src/components/TransactionDataList/TransactionDataList.module.scss?a67d","redux/Cashflow/cashflowSelectors.js","webpack://project/./src/components/ExpensesLimits/ExpensesLimits.module.scss?dfa4","webpack://project/./src/components/ModalAddIncome/ModalAddIncome.module.scss?c352","components/ModalAddIncome/ModalAddIncome.jsx","components/ExpensesLimits/ExpensesLimits.jsx","components/TransactionDataList/TransactionDataList.jsx","webpack://project/./src/pages/CashflowPage/CashflowPage.module.scss?8acf","pages/CashflowPage/CashflowPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input\":\"BasicInput_input__FjvHv\"};","import clsx from 'clsx';\nimport s from './BasicInput.module.scss';\n\nexport const BasicInput = ({ name, className,placeholder, ...props }) => {\n  return (\n    <input\n      id={name}\n      placeholder={placeholder}\n      className={clsx(className, s.input)}\n      type=\"text\"\n      name={name}\n      {...props}\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"LabledInput_label__F0cz6\",\"input\":\"LabledInput_input__emeD0\",\"wrapper\":\"LabledInput_wrapper__Rjf3H\"};","import clsx from 'clsx';\nimport { BasicInput } from '../BasicInput/BasicInput';\nimport s from './LabledInput.module.scss';\n\nexport const LabledInput = ({ label, value, className, inputClassName,  placeholder  }) => {\n  return (\n    <div className={clsx(className, s.wrapper)}>\n      <p className={s.label}>{label}</p>\n      <BasicInput\n         placeholder={placeholder}\n        value={value}\n        readOnly={true}\n        className={clsx(inputClassName, s.input)}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TransactionDataList_list__brUU8\",\"item\":\"TransactionDataList_item__IOtnc\",\"wrapper\":\"TransactionDataList_wrapper__qG4Yj\"};","import svg from '../../assets/icons/sprite.svg';\n\nexport const selectCategories = state => state.cashflow.category;\nexport const selectCategoriesWithIcons = state => {\n  const categories = selectCategories(state);\n  return categories.map(category => {\n    const categoryWithIcon = { ...category, icon: '' };\n    switch (category.name) {\n      case 'products':\n        categoryWithIcon.icon = `${svg}#icon-fish`;\n        break;\n      case 'clothing':\n        categoryWithIcon.icon = `${svg}#icon-checkroom`;\n        break;\n      case 'cafes':\n        categoryWithIcon.icon = `${svg}#icon-restaurant`;\n        break;\n      case 'beauty':\n        categoryWithIcon.icon = `${svg}#icon-medical`;\n        break;\n      case 'health':\n        categoryWithIcon.icon = `${svg}#icon-spa`;\n        break;\n      case 'transport':\n        categoryWithIcon.icon = `${svg}#icon-car`;\n        break;\n      case 'house':\n        categoryWithIcon.icon = `${svg}#icon-house`;\n        break;\n      case 'other':\n        categoryWithIcon.icon = `${svg}#icon-settings`;\n        break;\n      default:\n        break;\n    }\n    return categoryWithIcon;\n  });\n};\nexport const getPresevingSelect = state => state.cashflow.presaving;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ExpensesLimits_wrapper__QrixY\",\"innerWrapper\":\"ExpensesLimits_innerWrapper__MPXHN\",\"inputWrapper\":\"ExpensesLimits_inputWrapper__cQuOL\",\"btnWrapper\":\"ExpensesLimits_btnWrapper__O4UNL\",\"title\":\"ExpensesLimits_title__phEc0\",\"input\":\"ExpensesLimits_input__v+Fal\",\"firstInput\":\"ExpensesLimits_firstInput__hVHAs\",\"secondInput\":\"ExpensesLimits_secondInput__CNIIt\",\"submitButton\":\"ExpensesLimits_submitButton__DXdg+\"};","// extracted by mini-css-extract-plugin\nexport default {\"btnBox\":\"ModalAddIncome_btnBox__rw5Jx\"};","import { BasicInput } from 'components/BasicInput/BasicInput';\nimport { Button } from 'components/Button/Button';\nimport Modal from 'components/Modal/Modal';\nimport s from './ModalAddIncome.module.scss';\nimport { useDispatch } from 'react-redux';\nimport { addTransaction } from 'redux/Cashflow/cashflowOperations';\n\nexport const ModalAddIncome = ({ show, onClose }) => {\n  const dispatch = useDispatch();\n  const addIncome = value => {\n    dispatch(addTransaction({ type: 'income', sum: Number(value) }));\n    console.log('add income: ', value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const input = form.elements.input.value;\n    form.reset();\n    console.log('input:', input);\n    addIncome(input);\n    onClose();\n  };\n\n  return (\n    <Modal show={show} showCloseBtn={true} onClose={onClose}>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <BasicInput name=\"input\" placeholder=\"Enter income\" />\n        <div className={s.btnBox}>\n          <Button variant=\"primary\" type=\"submit\">\n            Add\n          </Button>\n          <Button variant=\"secondary\" onClick={onClose}>\n            Cancel\n          </Button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n","import { usePopup } from 'hooks/usePopup';\nimport { LabledInput } from 'components/LabledInput/LabledInput';\nimport { Button } from 'components/Button/Button';\nimport clsx from 'clsx';\nimport s from './ExpensesLimits.module.scss';\nimport { ModalAddIncome } from 'components/ModalAddIncome/ModalAddIncome';\n\nimport { getPresevingSelect } from 'redux/Cashflow/cashflowSelectors';\nimport { useSelector } from 'react-redux';\n\nconst ExpensesLimits = () => {\n  const { monthLimit, dailyLimit, totalByMounth, totalByDay } =\n    useSelector(getPresevingSelect);\n\n  const { show, showPopup, closePopup } = usePopup();\n\n  return (\n    <div className={s.wrapper}>\n      <div className={s.innerWrapper}>\n        <LabledInput\n          label=\"Daily limit\"\n          value={`${Math.round(dailyLimit - totalByDay)} ₴`}\n          className={clsx(s.firstInput, s.inputWrapper)}\n          inputClassName={s.input}\n        />\n        <LabledInput\n          label=\"Monthly limit\"\n          value={`${Math.round(monthLimit - totalByMounth)} ₴`}\n          className={clsx(s.secondInput, s.inputWrapper)}\n          inputClassName={s.input}\n        />\n        <div className={s.btnWrapper}>\n          <Button variant=\"neutral\" type=\"submit\" className={s.submitButton}>\n            Ready\n          </Button>\n          <Button variant=\"link\" onClick={showPopup}>\n            Add income\n          </Button>\n        </div>\n      </div>\n      <ModalAddIncome show={show} onClose={closePopup} />\n    </div>\n  );\n};\n\nexport default ExpensesLimits;\n","import Input from 'components/Input/Input';\nimport style from './TransactionDataList.module.scss';\nimport { SelectWithLabel } from 'components/SelectWithLabel/SelectWithLabel';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCategoriesWithIcons } from 'redux/Cashflow/cashflowSelectors';\nimport { useState } from 'react';\nimport { getCurrentBalance } from 'redux/Auth/authSelectors';\nimport svg from '../../assets/icons/sprite.svg';\nimport ExpensesLimits from 'components/ExpensesLimits/ExpensesLimits';\nimport { addTransaction } from 'redux/Cashflow/cashflowOperations';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport s from '../Input/Input.module.scss';\n\nconst schema = yup.object().shape({\n  comment: yup\n    .string()\n    .min(1, 'Comment should contain at least 1 character')\n    .max(80)\n    .required('This field is required'),\n  sum: yup\n    .number()\n    .positive('enter only a positive number')\n    .required('This field is required'),\n  category: yup.string(),\n});\n\nconst TransactionDataList = () => {\n  const dispatch = useDispatch();\n  const categories = useSelector(selectCategoriesWithIcons);\n  const balance = useSelector(getCurrentBalance);\n\n  const [selectedCategory, setSelectedCategory] = useState({\n    name: 'other',\n    title: 'Other',\n    icon: `${svg}#icon-settings`,\n  });\n  const initialValues = {\n    comment: '',\n    sum: '',\n    category: '',\n  };\n\n  const handleSubmit = (values, { setSubmitting, setFieldError }) => {\n    setSubmitting(false);\n    dispatch(\n      addTransaction({\n        ...values,\n        category: selectedCategory.name,\n        type: 'expense',\n      })\n    );\n  };\n\n  const handleCategoryChange = category => {\n    setSelectedCategory(category);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <Form className={style.wrapper}>\n        <div className={style.list}>\n          <div className={style.item}>\n            <Input\n              name=\"balance\"\n              value={balance? `${balance}UAH` : \"0 UAH\"}\n              placeholder=\"Account balance: UAH 80,000\"\n              label=\"From account\"\n              onChange={() => balance}\n            />\n          </div>\n\n          <div className={style.item}>\n            <SelectWithLabel\n              name=\"category\"\n              value={selectedCategory}\n              options={categories}\n              label=\"Per category\"\n              onChange={handleCategoryChange}\n            />\n          </div>\n\n          <div className={style.item}>\n            <div className={s.wrapp}>\n              <Field\n                className={s.input}\n                type=\"text\"\n                name=\"comment\"\n                placeholder=\"Enter comment\"\n              />\n              <label htmlFor=\"comment\" className={s.label}>\n                Expense comment\n              </label>\n            </div>\n\n            <ErrorMessage name=\"comment\"></ErrorMessage>\n          </div>\n\n          <div className={style.item}>\n            <div className={s.wrapp}>\n              <Field\n                name=\"sum\"\n                className={s.input}\n                type=\"text\"\n                placeholder=\"00.00\"\n              />\n              <label htmlFor=\"sum\" className={s.label}>\n                Sum\n              </label>\n            </div>\n\n            <ErrorMessage name=\"sum\"></ErrorMessage>\n          </div>\n        </div>\n\n        <ExpensesLimits />\n      </Form>\n    </Formik>\n  );\n};\nexport default TransactionDataList;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CashflowPage_wrapper__8VjHM\"};","import TransactionDataList from 'components/TransactionDataList/TransactionDataList';\nimport style from './CashflowPage.module.scss';\n\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getCategoryList, getPresevingDate} from 'redux/Cashflow/cashflowOperations';\n// import ExpensesLimits from 'components/ExpensesLimits/ExpensesLimits';\n\nconst CashflowPage = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCategoryList());\n  },[dispatch]);\n\n  \n  useEffect(() => {\n    dispatch(getPresevingDate());\n    console.log('jiji')\n  }, [dispatch]);\n\n  return (\n   \n\n    <div className=\"container\">\n      <div className={style.wrapper}>\n        <TransactionDataList />\n        {/* <ExpensesLimits /> */}\n      </div>\n    </div>\n  );\n};\n\nexport default CashflowPage;\n"],"names":["BasicInput","name","className","placeholder","props","id","clsx","s","type","LabledInput","label","value","inputClassName","readOnly","selectCategoriesWithIcons","state","categories","cashflow","category","selectCategories","map","categoryWithIcon","icon","svg","getPresevingSelect","presaving","ModalAddIncome","show","onClose","dispatch","useDispatch","Modal","showCloseBtn","action","onSubmit","e","preventDefault","form","currentTarget","input","elements","reset","console","log","addTransaction","sum","Number","Button","variant","onClick","useSelector","monthLimit","dailyLimit","totalByMounth","totalByDay","usePopup","showPopup","closePopup","Math","round","schema","yup","shape","comment","min","max","required","positive","balance","getCurrentBalance","useState","title","selectedCategory","setSelectedCategory","initialValues","values","setSubmitting","setFieldError","validationSchema","style","Input","onChange","SelectWithLabel","S","options","htmlFor","useEffect","getCategoryList","getPresevingDate"],"sourceRoot":""}