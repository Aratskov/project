{"version":3,"file":"static/js/933.1e0f62c1.chunk.js","mappings":"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","sources":["webpack://project/./src/pages/OwnPlanPage/OwnPlanPage.module.scss?aef0","pages/OwnPlanPage/OwnPlanPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"OwnPlanPage_wrapper__1xr2H\",\"list\":\"OwnPlanPage_list__eYpjq\",\"item\":\"OwnPlanPage_item__24AYq\",\"form\":\"OwnPlanPage_form__X2cKQ\",\"description\":\"OwnPlanPage_description__9xhcw\"};","// import PlanInputsList from 'components/PlanInputsList/PlanInputsList';\nimport { Button } from 'components/Button/Button';\nimport Input from 'components/Input/Input';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { postPlanPre } from 'redux/PersonalPlan/personalPlanOperationg';\nimport style from './OwnPlanPage.module.scss';\n\nconst validation = yup\n  .number('It`s must be a number')\n  .required('This line is required')\n  .positive('It`s must be a positive number')\n  .integer('It`s must be a integer');\n\nconst initialValues = {\n  salary: '',\n  passiveIncome: '',\n  savings: '',\n  cost: '',\n  footage: '',\n  procent: '',\n};\n\nconst OwnPlanPage = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema: yup.object({\n      salary: validation,\n      passiveIncome: validation,\n      savings: validation,\n      cost: validation,\n      footage: validation,\n      procent: validation,\n    }),\n\n    onSubmit: values => {\n      dispatch(postPlanPre(values));\n    },\n  });\n\n  return (\n    <div className=\"container\">\n      <div className={style.wrapper}>\n        <form className={style.form} onSubmit={formik.handleSubmit}>\n          <ul className={style.list}>\n            <li className={style.item}>\n              <Input\n                id=\"salary\"\n                name=\"salary\"\n                value={formik.values.salary}\n                placeholder=\"Enter text\"\n                label=\"1. RFP of both spouses, &#8372;\"\n                onChange={formik.handleChange}\n              />\n              {formik.submitCount > 0 && formik.errors.salary && (\n                <p style={{ color: 'white' }}>{formik.errors.salary}</p>\n              )}\n            </li>\n            <li className={style.item}>\n              <Input\n                id=\"passiveIncome\"\n                name=\"passiveIncome\"\n                value={formik.values.passiveIncome}\n                placeholder=\"Enter text\"\n                label=\"2. Passive income, months, &#8372;\"\n                onChange={formik.handleChange}\n              />\n              {formik.submitCount > 0 && formik.errors.passiveIncome && (\n                <p style={{ color: 'white' }}>{formik.errors.passiveIncome}</p>\n              )}\n            </li>\n            <li className={style.item}>\n              <Input\n                id=\"savings\"\n                name=\"savings\"\n                value={formik.values.savings}\n                placeholder=\"Enter text\"\n                label=\"3. Savings, &#8372;\"\n                onChange={formik.handleChange}\n              />\n              {formik.submitCount > 0 && formik.errors.savings && (\n                <p style={{ color: 'white' }}>{formik.errors.savings}</p>\n              )}\n            </li>\n            <li className={style.item}>\n              <Input\n                id=\"cost\"\n                name=\"cost\"\n                value={formik.values.cost}\n                placeholder=\"Enter text\"\n                label=\"4. Specify the cost of your future apartment, &#8372;\"\n                onChange={formik.handleChange}\n              />\n              {formik.submitCount > 0 && formik.errors.cost && (\n                <p style={{ color: 'white' }}>{formik.errors.cost}</p>\n              )}\n            </li>\n            <li className={style.item}>\n              <Input\n                id=\"footage\"\n                name=\"footage\"\n                value={formik.values.footage}\n                placeholder=\"Enter text\"\n                label=\"5. Specify the number of sq.m. of your future apartment\"\n                onChange={formik.handleChange}\n              />\n              {formik.submitCount > 0 && formik.errors.footage && (\n                <p style={{ color: 'white' }}>{formik.errors.footage}</p>\n              )}\n            </li>\n            <li className={style.item}>\n              <Input\n                id=\"procent\"\n                name=\"procent\"\n                value={formik.values.procent}\n                placeholder=\"Enter text\"\n                label=\"6. Accumulation, %\"\n                onChange={formik.handleChange}\n              />\n              {formik.submitCount > 0 && formik.errors.procent && (\n                <p style={{ color: 'white' }}>{formik.errors.procent}</p>\n              )}\n              <p className={style.description}>\n                Specify the percentage that you would like to accumulate per\n                month from the total amount of income and you will see when you\n                reach the goal\n              </p>\n            </li>\n          </ul>\n          <Button\n            nativeProps={{ style: { width: 150, marginTop: 20 } }}\n            type=\"submit\"\n          >\n            Pre Plan\n          </Button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default OwnPlanPage;\n"],"names":["validation","yup","required","positive","integer","initialValues","salary","passiveIncome","savings","cost","footage","procent","dispatch","useDispatch","formik","useFormik","validationSchema","onSubmit","values","postPlanPre","className","style","handleSubmit","Input","id","name","value","placeholder","label","onChange","handleChange","submitCount","errors","color","Button","nativeProps","width","marginTop","type"],"sourceRoot":""}